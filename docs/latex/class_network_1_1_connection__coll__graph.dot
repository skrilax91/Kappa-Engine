digraph "Network::Connection"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [label="Network::Connection",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="The Connection class is the class that will manage the connection between the server and the client."];
  Node2 -> Node1 [dir="back",color="steelblue1",style="solid"];
  Node2 [label="std::enable_shared\l_from_this\< Connection \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node3 -> Node1 [dir="back",color="darkorchid3",style="dashed",label=" _incomingMessages" ];
  Node3 [label="Network::NetworkQueue\l\< Network::OwnedMessage \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_network_1_1_network_queue.html",tooltip=" "];
  Node4 -> Node1 [dir="back",color="darkorchid3",style="dashed",label=" _tmpMessage" ];
  Node4 [label="Network::Message",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$struct_network_1_1_message.html",tooltip="The Message struct is the message that will be sent between the server and the client...."];
  Node5 -> Node4 [dir="back",color="darkorchid3",style="dashed",label=" header" ];
  Node5 [label="Network::MessageHeader",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$struct_network_1_1_message_header.html",tooltip="The MessageHeader struct is the header of the message. It contains the id of the message and the size..."];
  Node6 -> Node1 [dir="back",color="darkorchid3",style="dashed",label=" _outgoingMessages" ];
  Node6 [label="Network::NetworkQueue\l\< Network::Message \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_network_1_1_network_queue.html",tooltip=" "];
}
